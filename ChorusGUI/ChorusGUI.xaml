 <Window x:Name="window" x:Class="chorusgui.ChorusGUI"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:chorusgui"
        mc:Ignorable="d mc"
        xmlns:debugmode="debugmode"
        Title="Chorus Lap Timer" Height="714.972" Width="809.25"
        Closing="Window_Closing"
        Loaded="Window_Loaded">

    <Window.Resources>
        <local:PilotCollection x:Key="PilotCollection"/>
        <CollectionViewSource x:Key="PilotCollectionViewSource" Source="{StaticResource PilotCollection}"/>
        <local:RaceCollection x:Key="RaceCollection"/>
        <CollectionViewSource x:Key="RaceCollectionViewSource" Source="{StaticResource RaceCollection}"/>
        <local:QualificationCollection x:Key="QualificationCollection"/>
        <CollectionViewSource x:Key="QualificationCollectionViewSource" Source="{StaticResource QualificationCollection}"/>
        <local:HeatCollection x:Key="HeatCollection"/>
        <CollectionViewSource x:Key="HeatCollectionViewSource" Source="{StaticResource HeatCollection}"/>
    </Window.Resources>

    <TabControl x:Name="tabControl" Margin="0,0,2,2" SelectionChanged="tabControl_SelectionChanged">
        <TabItem Header="Race">
            <Grid>
                <Button x:Name="btnRace" Content="Start Heat" Margin="10,10,583,0" VerticalAlignment="Top" Click="button_Click"/>
                <DataGrid x:Name="dgCurrentHeat" Height="200" Margin="10,60,10,0" ItemsSource="{Binding Source={StaticResource HeatCollectionViewSource}}" VerticalAlignment="Top" CanUserAddRows="False" AutoGenerateColumns="false">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="RF-Channel" IsReadOnly="True" Binding="{Binding Path=RFChannel}" SortDirection="Ascending"/>
                        <DataGridTextColumn Header="Pilot Name" IsReadOnly="True" Binding="{Binding Path=Name}"/>
                        <mc:AlternateContent>
                            <mc:Choice Requires="debugmode">
                                <DataGridTextColumn Header="GUID" IsReadOnly="True" Binding="{Binding Path=guid}"/>
                            </mc:Choice>
                        </mc:AlternateContent>
                        <DataGridTextColumn Header="Result" IsReadOnly="True" Binding="{Binding Path=Result}"/>
                        <DataGridTextColumn Header="Lap 0" IsReadOnly="True"  Binding="{Binding Path=lap[0]}"/>
                        <DataGridTextColumn Header="Lap 1" IsReadOnly="True" Binding="{Binding Path=lap[1]}"/>
                        <DataGridTextColumn Header="Lap 2" IsReadOnly="True" Binding="{Binding Path=lap[2]}"/>
                        <DataGridTextColumn Header="Lap 3" IsReadOnly="True" Binding="{Binding Path=lap[3]}"/>
                        <DataGridTextColumn Header="Lap 4" IsReadOnly="True" Binding="{Binding Path=lap[4]}"/>
                        <DataGridTextColumn Header="Lap 5" IsReadOnly="True" Binding="{Binding Path=lap[5]}"/>
                        <DataGridTextColumn Header="Lap 6" IsReadOnly="True" Binding="{Binding Path=lap[6]}"/>
                        <DataGridTextColumn Header="Lap 7" IsReadOnly="True" Binding="{Binding Path=lap[7]}"/>
                        <DataGridTextColumn Header="Lap 8" IsReadOnly="True" Binding="{Binding Path=lap[8]}"/>
                        <DataGridTextColumn Header="Lap 9" IsReadOnly="True" Binding="{Binding Path=lap[9]}"/>
                        <DataGridTextColumn Header="Lap 10" IsReadOnly="True" Binding="{Binding Path=lap[10]}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <TabControl x:Name="tabControl1" Margin="10,286,10,10">
                    <TabItem Header="Qualification">
                        <Grid>
                            <DataGrid x:Name="dgQualification" Margin="10" ItemsSource="{Binding Source={StaticResource QualificationCollectionViewSource}}" IsReadOnly="True" AutoGenerateColumns="false">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Heat" IsReadOnly="True" Binding="{Binding Path=Heat}" SortDirection="Ascending"/>
                                    <DataGridTextColumn Header="Pilot Name" Binding="{Binding Path=Name}"/>
                                    <mc:AlternateContent>
                                        <mc:Choice Requires="debugmode">
                                            <DataGridTextColumn Header="GUID" IsReadOnly="True" Binding="{Binding Path=guid}"/>
                                        </mc:Choice>
                                    </mc:AlternateContent>
                                    <DataGridTextColumn Header="RF-Channel" IsReadOnly="True" Binding="{Binding Path=RFChannel}"/>
                                    <DataGridTextColumn Header="Result" IsReadOnly="True" Binding="{Binding Path=Result}"/>
                                    <DataGridTextColumn Header="Best Lap" IsReadOnly="True" Binding="{Binding Path=BestLap}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Elimination Phase">
                        <Grid>
                            <DataGrid x:Name="dgElemination" Margin="10" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Heat" IsReadOnly="True" Binding="{Binding Path=Heat}" SortDirection="Ascending"/>
                                    <DataGridTextColumn Header="Pilot Name" Binding="{Binding Path=Name}"/>
                                    <mc:AlternateContent>
                                        <mc:Choice Requires="debugmode">
                                            <DataGridTextColumn Header="GUID" IsReadOnly="True" Binding="{Binding Path=guid}"/>
                                        </mc:Choice>
                                    </mc:AlternateContent>
                                    <DataGridTextColumn Header="RF-Channel" IsReadOnly="True" Binding="{Binding Path=RFChannel}"/>
                                    <DataGridTextColumn Header="Result" IsReadOnly="True" Binding="{Binding Path=Result}"/>
                                    <DataGridTextColumn Header="Best Lap in Heat" IsReadOnly="True" Binding="{Binding Path=BestLap}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>

                    </TabItem>
                </TabControl>
                <Label x:Name="labelCurrentHeat" Content="Qualification Run 1, Heat 1:" HorizontalAlignment="Left" Margin="10,34,0,0" VerticalAlignment="Top" FontWeight="Bold"/>
                <Label x:Name="label6" Content="Results:" HorizontalAlignment="Left" Margin="10,260,0,0" VerticalAlignment="Top" FontWeight="Bold" RenderTransformOrigin="0.475,3.163"/>

            </Grid>
        </TabItem>
        <TabItem Header="Pilots">
            <Grid>
                <DataGrid x:Name="Pilots_dataGrid" Margin="10" ItemsSource="{Binding Source={StaticResource PilotCollectionViewSource}}" AutoGenerateColumns="False" CellEditEnding="Pilots_dataGrid_CellEditEnding">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Ranking" IsReadOnly="True" Binding="{Binding Path=Ranking}"/>
                        <DataGridTextColumn Header="Pilot Name" Binding="{Binding Path=Name}"/>
                        <DataGridTextColumn Header="Best Lap" IsReadOnly="True" Binding="{Binding Path=BestLap}"/>
                        <DataGridTextColumn Header="Best Race" IsReadOnly="True" Binding="{Binding Path=BestRace}"/>
                        <mc:AlternateContent>
                            <mc:Choice Requires="debugmode">
                                <DataGridTextColumn Header="GUID" IsReadOnly="True" Binding="{Binding Path=guid}"/>
                            </mc:Choice>
                        </mc:AlternateContent>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </TabItem>
        <TabItem Header="Settings" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width="54">
            <TabControl x:Name="Settings_TabControl" Margin="10" RenderTransformOrigin="0.497,0.564" SelectionChanged="Settings_TabControl_SelectionChanged">
                <TabItem Header="Race" FontWeight="Bold">
                    <Grid x:Name="RaceSettingsGrid">

                        <RadioButton x:Name="cbRaceMode1" Content="Laps to Finish" HorizontalAlignment="Left" Margin="10,14,0,0" VerticalAlignment="Top" Checked="RaceMode_Checked"/>
                        <TextBox x:Name="txtRaceMode" HorizontalAlignment="Left" Height="23" Margin="121,10,0,0" TextWrapping="Wrap" Text="120" VerticalAlignment="Top" Width="45" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" TextChanged="txtRaceMode_TextChanged"/>
                        <RadioButton x:Name="cbRaceMode2" Content="Time to Race + Overtime (in seconds)" HorizontalAlignment="Left" Margin="183,14,0,0" VerticalAlignment="Top" IsChecked="True" Checked="RaceMode_Checked"/>

                        <Separator Height="12" Margin="10,38,10,0" VerticalAlignment="Top" RenderTransformOrigin="0.493,-2.983"/>
                        <Label x:Name="label1" Content="Minimal Lap Time" HorizontalAlignment="Left" Margin="10,50,0,0" VerticalAlignment="Top"/>
                        <Button x:Name="DecMinimalLapTime" Content="-" HorizontalAlignment="Left" Margin="180,55,0,0" VerticalAlignment="Top" Width="28" Click="btn_MinimalLapTime"/>
                        <Label x:Name="MinimalLapTimeLabel" Content="5 seconds" HorizontalAlignment="Left" Margin="220,50,0,0" VerticalAlignment="Top" HorizontalContentAlignment="Center"/>
                        <Button x:Name="IncMinimalLapTime1" Content="+" HorizontalAlignment="Left" Margin="300,55,0,0" VerticalAlignment="Top" Width="28" Click="btn_MinimalLapTime"/>

                        <Separator Height="12" Margin="10,76,10,0" VerticalAlignment="Top" RenderTransformOrigin="0.493,-2.983"/>
                        <Label x:Name="label2" Content="Time to prepare for Race" HorizontalAlignment="Left" Margin="10,88,0,0" VerticalAlignment="Top"/>
                        <Button x:Name="DecTimeToPrepare" Content="-" HorizontalAlignment="Left" Margin="180,93,0,0" VerticalAlignment="Top" Width="28" Click="btn_TimeToPrepare"/>
                        <Label x:Name="TimeToPrepareLabel" Content="5 seconds" Margin="220,88,0,0" VerticalAlignment="Top" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Width="65"/>
                        <Button x:Name="IncTimeToPrepare" Content="+" HorizontalAlignment="Left" Margin="300,93,0,0" VerticalAlignment="Top" Width="28" Click="btn_TimeToPrepare"/>

                        <Separator Height="12" Margin="10,114,10,0" VerticalAlignment="Top" RenderTransformOrigin="0.493,-2.983"/>
                        <CheckBox x:Name="cbSkipFirstLap" Content="Skip First Lap" HorizontalAlignment="Left" Margin="10,131,0,0" VerticalAlignment="Top" Click="SkipFirstLap_CLick" IsChecked="True"/>
                        <CheckBox x:Name="cbDoubleOut" Content="Elemination phase with Double Out" HorizontalAlignment="Left" Margin="180,131,0,0" VerticalAlignment="Top" IsChecked="True" Click="DoubleOut_Click"/>

                        <Separator Height="12" Margin="10,146,10,0" VerticalAlignment="Top" RenderTransformOrigin="0.493,-2.983"/>
                        <Label x:Name="label3" Content="Number of Contenders for qualification run:" HorizontalAlignment="Left" Margin="10,163,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.575,-1.251"/>
                        <TextBox x:Name="contenders1" HorizontalAlignment="Left" Height="23" Margin="274,166,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="54" IsEnabled="False" Text="1"/>
                        <Slider x:Name="contender_slider1" Margin="10,189,10,0" VerticalAlignment="Top" TickPlacement="Both" Maximum="8" SmallChange="1" IsSnapToTickEnabled="True" Minimum="1" Value="1" Ticks="1,2,3,4,5,6,7,8" ValueChanged="contender_slider1_ValueChanged"/>

                        <Separator Height="12" Margin="10,219,10,0" VerticalAlignment="Top" RenderTransformOrigin="0.493,-2.983"/>
                        <Label x:Name="label4" Content="Qualification Races" HorizontalAlignment="Left" Margin="10,236,0,0" VerticalAlignment="Top"/>
                        <Button x:Name="DecQualificationRuns" Content="-" HorizontalAlignment="Left" Margin="180,239,0,0" VerticalAlignment="Top" Width="28" Click="btn_QualificationRuns"/>
                        <Label x:Name="QualificationRunsLabel" Content="3" HorizontalAlignment="Left" Margin="245,236,0,0" VerticalAlignment="Top" HorizontalContentAlignment="Center"/>
                        <Button x:Name="IncQualificationRuns" Content="+" HorizontalAlignment="Left" Margin="300,239,0,0" VerticalAlignment="Top" Width="28" Click="btn_QualificationRuns"/>

                        <Separator Height="12" Margin="10,262,10,0" VerticalAlignment="Top" RenderTransformOrigin="0.493,-2.983"/>
                        <Label x:Name="label5" Content="Number of Contenders for elemination run:" HorizontalAlignment="Left" Margin="6,276,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.575,-1.251"/>
                        <TextBox x:Name="contenders2" HorizontalAlignment="Left" Height="23" Margin="274,279,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="54" IsEnabled="False" Text="0"/>
                        <Slider x:Name="contender_slider2" Margin="10,302,10,0" VerticalAlignment="Top" TickPlacement="Both" Maximum="8" SmallChange="1" IsSnapToTickEnabled="True" Ticks="0,2,4,6,8" ValueChanged="contender_slider2_ValueChanged"/>

                        <Separator Height="12" Margin="10,332,10,0" VerticalAlignment="Top" RenderTransformOrigin="0.493,-2.983"/>
                        <CheckBox x:Name="cbEnableVoltageMonitoring" Content="Enable Voltage Monitoring for Device" HorizontalAlignment="Left" Margin="10,353,0,0" VerticalAlignment="Top" Click="VoltageMonitoring_CLick" />
                        <ComboBox x:Name="cbVoltageMonitoring" HorizontalAlignment="Left" Margin="263,349,0,0" VerticalAlignment="Top" Width="204" IsEnabled="False" SelectionChanged="cbVoltageMonitoring_SelChange"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Sounds" FontWeight="Bold">
                    <Grid>
                        <ComboBox x:Name="cbSpeechVoice" HorizontalAlignment="Left" Margin="149,53,0,0" VerticalAlignment="Top" Width="385" SelectionChanged="cbSpeechVoice_SelectionChanged"/>

                    </Grid>
                </TabItem>
            </TabControl>
        </TabItem>
        <TabItem Header="Debug" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width="54">
            <Grid Background="#FFE5E5E5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="22*"/>
                    <ColumnDefinition Width="83*"/>
                </Grid.ColumnDefinitions>
                <GroupBox x:Name="groupBox" Header="Serial Communication" RenderTransformOrigin="-0.056,0.304" Margin="10,0,10,10" Grid.ColumnSpan="2">
                    <Grid Margin="10" RenderTransformOrigin="-0.089,0.142">
                        <ListBox x:Name="listBox" Margin="0,40,0,0"/>
                        <TextBox x:Name="textBox" TextWrapping="Wrap" KeyDown="textBox_OnKeyDownHandler" Height="35" VerticalAlignment="Top"/>
                    </Grid>
                </GroupBox>
            </Grid>
        </TabItem>

    </TabControl>
</Window>
